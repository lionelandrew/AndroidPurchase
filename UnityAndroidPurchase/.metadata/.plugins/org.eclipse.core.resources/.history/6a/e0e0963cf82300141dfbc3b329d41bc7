package com.storetest;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.util.Log;
import com.android.util.IabHelper;
import com.android.util.IabResult;
import com.android.util.Inventory;
import com.android.util.Purchase;
import com.unity3d.player.UnityPlayer;
import com.unity3d.player.UnityPlayerActivity;

public class StorePurchaser extends UnityPlayerActivity{
	
	static IabHelper mHelper;
	static String debugString = "Start";

	public static void initStore(Context ctx, String key){
		
		debugString = "Reached InitStore";

		mHelper = new IabHelper(ctx, key);
		
		
		mHelper.startSetup(new IabHelper.OnIabSetupFinishedListener() {
				public void onIabSetupFinished(IabResult result) {
					if(!result.isSuccess()){
						SendDebugToUnity("Problem setting up In-app Billing: " + result);
				}
				else
				{
					SendDebugToUnity("Store setup correctly: " + result);
					mHelper.queryInventoryAsync(mGotInventoryListener);
				}
			}
		});
	}
	
	
	static IabHelper.QueryInventoryFinishedListener mGotInventoryListener = new IabHelper.QueryInventoryFinishedListener() {
        public void onQueryInventoryFinished(IabResult result, Inventory inventory) {
        	
        	SendDebugToUnity("Finished Inventory Query");
        }
	};
	
	
	public String retrieveDebugValue()
	{
		return debugString;
	}
	
	
	public static void makePurchase(Activity ctx, String productName){
		
		if (mHelper != null) mHelper.flagEndAsync();
		
		SendDebugToUnity("Purchasing product: " + productName);

		mHelper.launchPurchaseFlow(ctx, productName, 10001, mPurchaseFinishedListener, "");	
		
	}
	
	static IabHelper.OnIabPurchaseFinishedListener mPurchaseFinishedListener = new IabHelper.OnIabPurchaseFinishedListener() {
		public void onIabPurchaseFinished(IabResult result, Purchase info) {
			
			mHelper.flagEndAsync();
			
			if (result.isFailure()){
				
				if(result.getMessage() == "Unable to buy item (response: 7:Item Already Owned)")
				{
					mHelper.consumeAsync(info, mConsumeFinishedListener);
				}
				SendMessageToUnity("Fail");
				SendDebugToUnity("Purchase failed: " + result.getMessage());
				return;
			}
			else
			{
				mHelper.consumeAsync(info, mConsumeFinishedListener);
			}
		}
		
	};
	
	@SuppressLint("NewApi")
	@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		
        super.onActivityResult(requestCode, resultCode, data);

        Log.d("StorePurchaser", "onActivityResult(" + requestCode + "," + resultCode + "," + data);
        
        // Pass on the activity result to the helper for handling
        if (!mHelper.handleActivityResult(requestCode, resultCode, data)) {
            super.onActivityResult(requestCode, resultCode, data);
        } else {
        	Log.d("StorePurchaser", "onActivityResult handled by IABUtil.");
        }
    }
	
	static IabHelper.OnConsumeFinishedListener mConsumeFinishedListener = new IabHelper.OnConsumeFinishedListener() {
        public void onConsumeFinished(Purchase purchase, IabResult result) {
            // if we were disposed of in the meantime, quit.
            if (mHelper == null) return;
      
            if (result.isSuccess()) {
            	
            	Log.d("StorePurchaser", purchase.getToken());
            	SendMessageToUnity(purchase.getToken());
            }
            else {
            }
        }
    };
	
	
	public static void SendMessageToUnity(String msg){
		UnityPlayer.UnitySendMessage("AndroidCreditPurchaser", "RecieveFromJava", msg);
	}
	
	public static void SendDebugToUnity(String msg){
		UnityPlayer.UnitySendMessage("AndroidCreditPurchaser", "DebugFromJava", msg);
	}
	

}

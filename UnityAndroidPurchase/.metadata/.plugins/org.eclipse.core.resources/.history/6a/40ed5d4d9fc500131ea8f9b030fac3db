package com.storetest;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;

import com.android.util.IabHelper;
import com.android.util.IabResult;
import com.android.util.Inventory;
import com.android.util.Purchase;
import com.unity3d.player.UnityPlayer;
import com.unity3d.player.UnityPlayerActivity;

public class StorePurchaser extends Activity{
	
	static IabHelper mHelper;
	static String debugString = "Start";

	public static void initStore(Context ctx){
		debugString = "Reached InitStore";
		
		String base64EncodedPublicKey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAi81cAx8/D6EI2Q8ldAMxz+S9RWcHYhP6STFi6XwqLBb0pjyHVcBdCyCpUVvG+Ss6ngRlVLXrQCBP/knI2CRsT3MqFiafPFuyABPWIMoOytH6sN8jmZE/Hek7UOu3p4yJDEgza52A+ZGls8nDPbEHoz9Gk9QlOTukN5eOEVe2scrldQOPIh42JdwjKFLh3klqYkKLzQQyExM0VC0vKjqHxpJi65qLgkpqJvhJpERRcw6gAGnNiXw6dW2kZKQYI48sVSi/jtwKr+YqSQaSg0Y3LpJVCsS86qdStaZAOiMp5biYYLRkcyd9wzrDz6CR5VJbjSZ3cXEOJ8uLtzyx0ia2twIDAQAB";
		mHelper = new IabHelper(ctx, base64EncodedPublicKey);
		
		
		mHelper.startSetup(new IabHelper.OnIabSetupFinishedListener() {
			public void onIabSetupFinished(IabResult result) {
				if(!result.isSuccess()){
					debugString = "Problem setting up In-app Billing: " + result;
			}
			else
			{
				debugString = "Store setup correctly: " + result;
				mHelper.queryInventoryAsync(mGotInventoryListener);
			}
			}
		});
	}
	
	
    static IabHelper.QueryInventoryFinishedListener mGotInventoryListener = new IabHelper.QueryInventoryFinishedListener() {
        public void onQueryInventoryFinished(IabResult result, Inventory inventory) {
        		
        	Purchase purchasedItem = inventory.getPurchase("test_item.1");
        		if (purchasedItem != null){
    				Log.d("StorePurchaser", "Existing item found, consume it now!");
	                mHelper.consumeAsync(inventory.getPurchase("test_item.1"), mConsumeFinishedListener);
	                return;
        		}
            }
        };
	
	
	public static String retrieveDebugValue()
	{
		return debugString;
	}
	
	
	public static void makePurchase(Activity ctx){
		
		if (mHelper != null) mHelper.flagEndAsync();
		mHelper.launchPurchaseFlow(ctx, "test_item.1", 10001, mPurchaseFinishedListener, "");		
	}
	
	static IabHelper.OnIabPurchaseFinishedListener mPurchaseFinishedListener = new IabHelper.OnIabPurchaseFinishedListener() {
		public void onIabPurchaseFinished(IabResult result, Purchase info) {
			Log.d("StorePurchaser", "Purchase finished: " + result + ", purchase: " + info);
//			mHelper.flagEndAsync();
//			Log.d("StorePurchaser", "Arrived at onIabPurchaseFinished");
//			
//			if (result.isFailure()){
//				SendMessageToUnity(result.getMessage());
//				return;
//			}
//			Log.d("StorePurchaser", "Purchase Success: " + info.getSku());
//			if (info.getSku().equals("test_item.1")) {
////				Handler handler = new Handler(Looper.getMainLooper());
////				handler.post(new Runnable(){
////					public void run(){
////						mHelper.queryInventoryAsync(mGotInventoryListener);
////					}
////				});
//				//SendMessageToUnity("Purchase Success");
//			}
			
			
//			Looper.prepare();
//			mHelper.flagEndAsync();
//			mHelper.queryInventoryAsync(mGotInventoryListener);
//			Looper myLooper = Looper.myLooper();
//			Looper.loop();
//			myLooper.quit();
			
		}
		
	};
	
	@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        Log.d("StorePurchaser", "onActivityResult(" + requestCode + "," + resultCode + "," + data);

        // Pass on the activity result to the helper for handling
        if (!mHelper.handleActivityResult(requestCode, resultCode, data)) {
            super.onActivityResult(requestCode, resultCode, data);
        } else {
        	Log.d("StorePurchaser", "onActivityResult handled by IABUtil.");
        }
    }
	
    static IabHelper.OnConsumeFinishedListener mConsumeFinishedListener = new IabHelper.OnConsumeFinishedListener() {
        public void onConsumeFinished(Purchase purchase, IabResult result) {
            // if we were disposed of in the meantime, quit.
            if (mHelper == null) return;

            if (result.isSuccess()) {
            	SendMessageToUnity("Item Consumed");
            }
            else {
            }
        }
    };
	
	
	public static void SendMessageToUnity(String msg){
		UnityPlayer.UnitySendMessage("debugText", "RecieveFromJava", msg);
	}
	

}
